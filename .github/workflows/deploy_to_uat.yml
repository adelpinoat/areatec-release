# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: backend component
on:
  pull_request:
    branches:
      - 'uat'
env:
  ENV_DEST: ${{ github.base_ref }}


jobs:
  ## Validamos  que los componenetes que se han establecido en el Json de release , estan 
  setparameters:
    if: github.event_name == 'pull_request'
    # if: github.event_name == 'pull_request' && contains(github.event.pull_request.changed_files, 'path/to/file')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ github.head_ref }}"
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set parameters deploy
        id: read-json-componetes
        uses: ./.github/setparameters/
        with:
          path_json: 'componentes/componentes_release.json'
      - name: Use JSON content
          #echo "JSON content: ${{ toJson(fromJSON(steps.read-json-componenetes.outputs.json_content)) }}"
        run: | 
          echo "JSON content:"
          cat componentes/componentes_release.json
      - name: Set parameters deploy
        id: read-json-order
        uses: ./.github/setparameters/
        with:
          path_json: 'componentes/order.json'
      - name: Use JSON content
          #echo "JSON content: ${{ toJson(fromJSON(steps.read-json-order.outputs.json_content)) }}"
        run: | 
          echo "JSON content:"
          cat componentes/order.json
            
  # mergeamos la pull request a la rama Release  UAT para dejarla preparada para desplegar
  automerge:
    needs: 'setparameters'
    if: github.event_name == 'pull_request' && github.base_ref == 'uat'
    runs-on: ubuntu-latest
    steps:
      - name: execute merge
        uses: "gsoc2/automerge-action@v0.16.2"
        env:
          GITHUB_TOKEN: "${{ secrets.TOKEN_PULLREQ }}"
          MERGE_LABELS: ""
          MERGE_REQUIRED_APPROVALS: "0"
          MERGE_METHOD: "rebase"
          PULL_REQUEST: "${{ github.event.pull_request.number }}"
          LOG: "DEBUG"
  deploytoenvdest:
    needs: 'automerge'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ github.base_ref }}"
      - name: check to regsistry
        run: | 
          echo "AQUI DEBERIAMOS DE CHECKEAR EL ARTEFACTO ESTA EN EL REGISTRY Y DEPUES HACER EL DEPLOY"
          echo "AQUI DEBERIAMOS DE CHECKEAR EL ARTEFACTO ESTA EN EL REGISTRY Y DEPUES HACER EL DEPLOY"
          
      ##- name: checknexus
        ##uses: ./.github/deploytoenvdest
        ##with:
          ##envdestino: "${{ github.base_ref }}"
          ##json_componenetes: "${{ toJson(fromJSON(steps.read-json-componenetes.outputs.json_content)) }}"
          ##json_order: "${{ toJson(fromJSON(steps.read-json-order.outputs.json_content)) }}"